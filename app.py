# app.py
import streamlit as st
from PIL import Image
from churn_predicao_id import run as run_predicao_id

# T√≠tulo e imagem lateral
st.set_page_config(page_title="Plataforma de Reten√ß√£o", layout="wide")

with st.sidebar:
    st.image("foto_fabio.jpeg", width=200)
    st.markdown("#### Fabio do Nascimento Oliveira")
    st.markdown("Engenharia Eletr√¥nica e de Computa√ß√£o - UFRJ")
    st.markdown("**Trabalho de Conclus√£o de Curso**")
    st.markdown("**Plataforma para Predi√ß√£o e Preven√ß√£o de Churn utilizando Machine Learning, WebAPIs e Estrat√©gias de Growth**")
    st.markdown("Orientador: Heraldo Luis Silveira Almeida")
    pagina = st.selectbox("üîé Navegue pelas se√ß√µes:", ["P√°gina Inicial", "Predi√ß√£o por CustomerID"])

# P√°gina Central
if pagina == "P√°gina Inicial":
    st.markdown("## üìä Plataforma de Reten√ß√£o de Clientes")
    st.write("""
    Esta plataforma foi desenvolvida como parte do Trabalho de Conclus√£o de Curso de Engenharia Eletr√¥nica e de Computa√ß√£o na UFRJ. 
    Seu objetivo √© prever a probabilidade de churn (cancelamento) de clientes e propor estrat√©gias de reten√ß√£o baseadas em dados reais e explicabilidade.
    
    ### Funcionalidades:
    - Predi√ß√£o individual por CustomerID
    - Estrat√©gias de reten√ß√£o personalizadas
    - Visualiza√ß√£o da import√¢ncia dos fatores (SHAP)
    """)
    
    st.markdown("### ‚öôÔ∏è Modelagem Utilizada")
    st.write("""
    - Algoritmo base: **XGBoost**
    - T√©cnica de balanceamento: **SMOTE**
    - Sele√ß√£o de vari√°veis: **RFE com 15 features**
    - Otimiza√ß√£o de hiperpar√¢metros: **Optuna (F1-score)**
    """)

elif pagina == "Predi√ß√£o por CustomerID":
    run_predicao_id()